<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="egovframework.Test.main.service.dao.BoardServiceDAO">

	<select
		resultType="TestBoardServiceVO" parameterType="map" id="selectBoardList">
		SELECT 
		P.*, 
		PAYMENT_ID as paymentId,
		P.customer_id as customerId,
		P.staff_id as staffId,
		P.rental_id as
		rentalId,
		C.FIRST_NAME as firstName,
		R_NUM as rNum,
		P.VIEW_CNT as
		viewCnt,
		P.LIKE_CNT as likeCnt,
		P.ID as id
		FROM
		(SELECT ROW_NUMBER() OVER
		(ORDER BY payment_id DESC) AS
		R_NUM, P.* FROM
		payment P) P
		LEFT JOIN customer C ON P.customer_id = C.customer_id
		LEFT JOIN staff S ON P.staff_id = S.staff_id
		LEFT JOIN rental R ON P.rental_id = R.rental_id
		WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>

	<select resultType="int" id="totalSelectBoardList">
		SELECT COUNT(*) AS CNT
		FROM
		(SELECT
		ROW_NUMBER() OVER (ORDER BY payment_id DESC) AS R_NUM, P.* FROM
		payment P) P
		LEFT JOIN customer C ON P.customer_id = C.customer_id
		LEFT
		JOIN staff S ON P.staff_id = S.staff_id
		LEFT JOIN rental R ON
		P.rental_id = R.rental_id
	</select>

	<select id="selectView"	parameterType="TestBoardServiceVO" resultType="TestBoardServiceVO">
		SELECT PAYMENT_ID as paymentId,
		customer_id as customerId,
		staff_id as staffId,
		rental_id as rentalId,
		VIEW_CNT as viewCnt,
		LIKE_CNT as likeCnt,
		ID as id
		FROM PAYMENT
		WHERE PAYMENT_ID =
		#{paymentId}
	</select>

	<update id="viewCount" parameterType="TestBoardServiceVO">
		UPDATE PAYMENT
		SET VIEW_CNT = VIEW_CNT + 1
		WHERE
		PAYMENT_ID = #{paymentId}
	</update>


	<select id="orderByView" parameterType="TestBoardServiceVO" resultType="TestBoardServiceVO">
		SELECT P.*, PAYMENT_ID as paymentId,
		P.customer_id as
		customerId,
		P.staff_id as staffId,
		P.rental_id as rentalId,
		C.FIRST_NAME
		as firstName,
		R_NUM as rNum,
		P.VIEW_CNT as viewCnt,
		P.LIKE_CNT as
		likeCnt,
		P.ID as id
		FROM
		(SELECT ROW_NUMBER() OVER (ORDER BY payment_id
		DESC) AS
		R_NUM, P.* FROM
		payment P) P
		LEFT JOIN customer C ON
		P.customer_id = C.customer_id
		LEFT JOIN staff S ON P.staff_id =
		S.staff_id
		LEFT JOIN rental R ON P.rental_id = R.rental_id
		ORDER BY
		VIEW_CNT DESC
		LIMIT 5
	</select>

	<select id="search" parameterType="TestBoardServiceVO" resultType="TestBoardServiceVO">
		SET @ROWNUM := 0;

		SELECT P.*,
		@ROWNUM:=@ROWNUM+1 AS rNum2,
		P.PAYMENT_ID AS paymentId,
		P.customer_id as customerId,
		P.staff_id as staffId,
		P.rental_id as rentalId,
		P.VIEW_CNT as viewCnt,
		P.LIKE_CNT as likeCnt,
		P.ID as id
		FROM PAYMENT P
		<if test="idx == 0">
			WHERE P.PAYMENT_ID LIKE concat('%', #{keyWord}, '%')
		</if>
		<if test="idx == 1">
			WHERE P.CUSTOMER_ID LIKE concat('%', #{keyWord}, '%')
		</if>
		ORDER BY PAYMENT_ID DESC
	</select>

	<update id="updateLikeCnt" parameterType="TestBoardServiceVO">
		UPDATE PAYMENT
		SET LIKE_CNT = LIKE_CNT + 1
		WHERE PAYMENT_ID = #{paymentId}
	</update>

	<insert id="insertLikeBoard" parameterType="TestBoardServiceVO">
		INSERT INTO BOARD_LIKE(ID, PAYMENT_ID)
		VALUES(#{id},
		#{paymentId})
	</insert>

	<select id="checkLike" parameterType="TestBoardServiceVO" resultType="int">
		SELECT COUNT(*)
		FROM BOARD_LIKE
		WHERE ID = #{id} AND
		PAYMENT_ID = #{paymentId}
	</select>

	<select id="likeCntTot" parameterType="TestBoardServiceVO" resultType="TestBoardServiceVO">
		SELECT PAYMENT_ID as paymentId,
		customer_id as customerId,
		staff_id as staffId,
		rental_id as rentalId,
		VIEW_CNT as viewCnt,
		LIKE_CNT as likeCnt,
		ID as id
		FROM PAYMENT
		WHERE PAYMENT_ID =
		#{paymentId}
	</select>

	<!-- 좋아요 숫자 삭제 -->
	<update id="cancleLikeCnt" parameterType="TestBoardServiceVO">
		UPDATE PAYMENT
		SET LIKE_CNT = LIKE_CNT - 1
		WHERE PAYMENT_ID = #{paymentId}
	</update>

	<!-- 좋아요 삭제 -->
	<delete id="deleteLikeBoard"
		parameterType="egovframework.Test.main.service.TestBoardServiceVO">
		DELETE FROM BOARD_LIKE
		WHERE PAYMENT_ID = #{paymentId}
		AND ID = #{id}
	</delete>

	<!-- 게시글 삽입 -->
	<insert id="insertBoard" parameterType="TestBoardServiceVO">
        <![CDATA[
        INSERT INTO TEST_BOARD(TEST_TITLE, TEST_CONTENT, FILE_NAME, ID, ORI_FILE_NAME)
        VALUES(#{testTitle}, #{testContent}, #{fileName}, #{id}, #{oriFileName})
        ]]>
	</insert>

	<select id="selectTestRownum" parameterType="TestBoardServiceVO" resultType="TestBoardServiceVO">
		SET @TEST_ROWNUM := 0;
		SELECT *,
			@TEST_ROWNUM:=@TEST_ROWNUM+1 AS TEST_ROWNUM
		FROM TEST_BOARD
		ORDER BY TEST_NUM
	</select>

	<!-- 게시글 수정 -->
	<update id="updateBoard" parameterType="TestBoardServiceVO">
		UPDATE TEST_BOARD
		SET TEST_TITLE = #{testTitle},
		TEST_CONTENT = #{testContent},
		FILE_NAME = #{fileName]
		WHERE ID = #{id}
		AND TEST_NUM = #{testNum}
	</update>


</mapper>